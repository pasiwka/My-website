/**
  Нормализация блочной модели
 */
 *,
 ::before,
 ::after {
   box-sizing: border-box;
 }
 
 /**
   Убираем внутренние отступы слева тегам списков,
   у которых есть атрибут class
  */
 :where(ul, ol):where([class]) {
   padding-left: 0;
 }
 
 /**
   Убираем внешние отступы body и двум другим тегам,
   у которых есть атрибут class
  */
 body,
 :where(blockquote, figure):where([class]) {
   margin: 0;
 }
 
 /**
   Убираем внешние отступы вертикали нужным тегам,
   у которых есть атрибут class
  */
 :where(
   h1,
   h2,
   h3,
   h4,
   h5,
   h6,
   p,
   ul,
   ol,
   dl
 ):where([class]) {
   margin-block: 0;
 }
 
 :where(dd[class]) {
   margin-left: 0;
 }
 
 :where(fieldset[class]) {
   margin-left: 0;
   padding: 0;
   border: none;
 }
 
 /**
   Убираем стандартный маркер маркированному списку,
   у которого есть атрибут class
  */
 :where(ul[class]) {
   list-style: none;
 }
 
 :where(address[class]) {
   font-style: normal;
 }
 
 /**
   Обнуляем вертикальные внешние отступы параграфа,
   объявляем локальную переменную для внешнего отступа вниз,
   чтобы избежать взаимодействие с более сложным селектором
  */
 p {
   --paragraphMarginBottom: 24px;
 
   margin-block: 0;
 }
 
 /**
   Внешний отступ вниз для параграфа без атрибута class,
   который расположен не последним среди своих соседних элементов
  */
 p:where(:not([class]):not(:last-child)) {
   margin-bottom: var(--paragraphMarginBottom);
 }
 
 
 /**
   Упрощаем работу с изображениями и видео
  */
 img,
 video {
   display: block;
   max-width: 100%;
   height: auto;
 }
 
 /**
   Наследуем свойства шрифт для полей ввода
  */
 input,
 textarea,
 select,
 button {
   font: inherit;
 }
 
 html {
   /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
   height: 100%;
   /**
     Убираем скачок интерфейса по горизонтали
     при появлении / исчезновении скроллбара
    */
   scrollbar-gutter: stable;
 }
 
 /**
   Плавный скролл
  */
 html,
 :has(:target) {
   scroll-behavior: smooth;
 }
 
 body {
   /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
   min-height: 100%;
   /**
     Унифицированный интерлиньяж
    */
   line-height: 1.5;
 }
 
 /**
   Нормализация высоты элемента ссылки при его инспектировании в DevTools
  */
 a:where([class]) {
   display: inline-flex;
 }
 
 /**
   Курсор-рука при наведении на элемент
  */
 button,
 label {
   cursor: pointer;
 }
 
 /**
   Приводим к единому цвету svg-элементы
  */
 [fill] { fill: currentColor }
 [stroke] { stroke: currentColor }
 
 /**
   Чиним баг задержки смены цвета при взаимодействии с svg-элементами
  */
 svg * {
   transition-property: fill, stroke;
 }
 
 /**
   Удаляем все анимации и переходы для людей,
   которые предпочитают их не использовать
  */
 @media (prefers-reduced-motion: reduce) {
   *,
   ::before,
   ::after {
     animation-duration: 0.01ms !important;
     animation-iteration-count: 1 !important;
     transition-duration: 0.01ms !important;
     scroll-behavior: auto !important;
   }
 }
 body{
    background-color: #1c1a1c;
}


header {
  height: 150px; /* Минимальная высота, чтобы вместить логотип */
  position: relative; /* Для корректного позиционирования дочерних элементов */
}

.header__logo {
  display: block;
  margin-top: 24px;
  margin-left: 24px;
}

.header__menu-list {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 45px; /* Или column-gap: 45px; */
  padding: 0;
  margin: 0;
  list-style: none;
}


.header__menu-link{
  color: #EF731B;
}

.vip-ai-header::before {
    content: '';
    position: absolute;
    left: 100%;
    width: 400px;
    height: 400px;
    background: radial-gradient(
        circle,
        rgba(255, 100, 100, 0.5) 0%,  /* Розовый */
        rgba(255, 150, 50, 0.3) 70%,  /* Оранжевый */
        rgba(255, 200, 0, 0) 100%     /* Прозрачный */
    );
    filter: blur(30px); /* Размытие краёв */
    transform: translate(-50%, -50%);
}

.vip-ai-header1::before {
  content: '';
  position: absolute;
  left: 30%;
  top: 50%;
  width: 1000px;
  height: 400px;
  background: radial-gradient(
      circle,
      rgba(255, 100, 100, 0.5) 0%,  /* Розовый */
      rgba(255, 150, 50, 0.3) 70%,  /* Оранжевый */
      rgba(255, 200, 0, 0) 100%     /* Прозрачный */
  );
  filter: blur(30px); /* Размытие краёв */
  transform: translate(-50%, -50%);
}

.vip-ai-header2::before {
  content: '';
  position: absolute;
  left: 90%;
  top: 100%;
  width: 1000px;
  height: 400px;
  background: radial-gradient(
      circle,
      rgba(255, 100, 100, 0.5) 0%,  /* Розовый */
      rgba(255, 150, 50, 0.3) 70%,  /* Оранжевый */
      rgba(255, 200, 0, 0) 100%     /* Прозрачный */
  );
  filter: blur(30px); /* Размытие краёв */
  transform: translate(-50%, -50%);
}


/* Стили для основного элемента */
.t396__elem.tn-elem {
    position: absolute;
    width: 517px;
    left: 420.5px;
    top: 218px;
    height: 517px;
  }
  
  /* Стили для видео */
  .tn-atom > video {
    object-fit: cover;
    background-size: cover;
    width: 550px;
    height: 550px;
    border-radius: 20px !important;
  }
  
  /* Адаптивные стили для разных разрешений */
  @media (max-width: 320px) {
    .t396__elem.tn-elem {
      left: -741px;
      top: 823px;
    }
  }
  
  @media (max-width: 480px) {
    .t396__elem.tn-elem {
      left: 711px;
      top: -442px;
      width: 305px;
      height: 305px;
    }
  }
  
  @media (max-width: 640px) {
    .t396__elem.tn-elem {
      left: 306px;
      top: 218px;
      width: 517px;
      height: 517px;
    }
  }
  
  @media (max-width: 960px) {
    .t396__elem.tn-elem {
      left: 443px;
      top: 232px;
      width: 590px;
      height: 590px;
    }
  }